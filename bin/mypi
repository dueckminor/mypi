#!/usr/bin/env bash

set -e

DIR_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"

install_completion()
{
    if ! MYPI="$(cd / ; command -v mypi)" || \
        [[ "${MYPI}" != "${DIR_ROOT}/bin/mypi" ]]; then
        cat <<EOF
PATH="${DIR_ROOT}/bin:\${PATH}"
EOF
    fi
    cat <<EOF
_mypi_completion()
{
    COMPREPLY=()

    _mypi_add_compgen()
    {
        while IFS=\$'\n' read -r line; do COMPREPLY+=("\$line"); done < <(compgen -W "\${1}" -- "\${cur}") 
    }

    local cur="\${COMP_WORDS[COMP_CWORD]}"
    local commands="docker service"
    if [[ \$COMP_CWORD == 1 ]]; then
        _mypi_add_compgen "\${commands}"
    fi
    if [[ \$COMP_CWORD == 2 ]]; then
        local DIR=
        case "\${COMP_WORDS[1]}" in
            docker)
                DIR="${DIR_ROOT}/docker"
                ;;
            service)
                DIR="${DIR_ROOT}/services"
                ;;
        esac
        if [[ -n "\${DIR}" ]]; then
            _mypi_add_compgen "\$(ls \${DIR})"
        fi
    fi
    if [[ \$COMP_CWORD == 3 ]]; then
        case "\${COMP_WORDS[1]}" in
            docker)
                _mypi_add_compgen "build rebuild sh"
                ;;
            service)
                DIR="${DIR_ROOT}/services/\${COMP_WORDS[2]}/actions"
                if [[ -d "\${DIR}" ]]; then
                    _mypi_add_compgen "\$(ls \${DIR})"
                fi
                ;;
        esac
    fi

    unset _mypi_add_compgen
}

complete -F _mypi_completion mypi
EOF
}

usage()
{
    cat <<EOF
USAGE:
mypi <docker/service> <name> <action> [parameter...]

For 'docker' <action> may be
- build
- rebuild

For 'service' <action> may be
- start
- stop
- restart
- ...

To enable bash completion call:
eval "\$(${BASH_SOURCE[0]} bash_enable)"
EOF
}

if [[ "${1}" == "bash_enable" ]]; then
    install_completion
    exit 0
fi

if (( $# < 3 )); then
    usage
fi

TYPE="${1}"
shift
NAME="${1}"
shift
ACTION="${1}"
shift

case "${TYPE}-${ACTION}" in
docker-build)
    "${DIR_ROOT}/scripts/docker-build" "${NAME}" "$@"
    ;;
docker-rebuild)
    "${DIR_ROOT}/scripts/docker-build" "${NAME}" "$@" --no-cache
    ;;
docker-sh)
    "${DIR_ROOT}/scripts/docker-sh" "${NAME}" "$@"
    ;;
service-*)
    "${DIR_ROOT}/services/${NAME}/actions/${ACTION}" "$@"
    ;;
esac
